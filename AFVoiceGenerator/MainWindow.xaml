<metro:MetroWindow x:Class="AFVoiceGenerator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:metroDialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:local="clr-namespace:AFVoiceGenerator"
        mc:Ignorable="d"
        Title="AF Voice Generator" Icon="pack://application:,,,/Forest.ico"
        FocusManager.FocusedElement="{Binding ElementName=InputTextBox}"
        TitleCharacterCasing="Normal" GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
        metroDialogs:DialogParticipation.Register="{Binding}"
        WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize" Width="800" Height="720"
        Loaded="MainWindow_Loaded">

    <Window.Resources>
        <Style TargetType="Grid">
            <Setter Property="Margin" Value="1"/>
        </Style>
        <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="metro:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="metro:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <GroupBox Grid.Row="0" Header="_Input Text">
            <TextBox x:Name="InputTextBox" AcceptsReturn="True" TextWrapping="Wrap"
                     IsReadOnly="{Binding Path=IsPreviewing}"
                     Text="{Binding Path=InputText, UpdateSourceTrigger=PropertyChanged}"
                     TextChanged="InputTextTextBox_TextChanged"/>
        </GroupBox>
        <GroupBox Grid.Row="1" Header="_Output Text">
            <TextBox IsReadOnly="True" TextWrapping="Wrap"
                     Text="{Binding Path=OutputText, Mode=OneWay}"/>
        </GroupBox>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <GroupBox Grid.Column="0" Header="_Control">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="0.1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsPreviewing}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <Label Grid.Row="0" Grid.Column="0" Content="_Pitch"/>
                    <Slider Grid.Row="0" Grid.Column="1" Minimum="-3" Maximum="3" Value="{Binding Path=Pitch}"/>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Path=Pitch, StringFormat=F2}"/>

                    <Label Grid.Row="1" Grid.Column="0" Content="Trim _Start"/>
                    <Slider Grid.Row="1" Grid.Column="1" Minimum="0" Maximum="0.5" Value="{Binding Path=TrimStart}"/>
                    <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding Path=TrimStart, StringFormat=F2}"/>
                    
                    <Label Grid.Row="2" Grid.Column="0" Content="Trim _End"/>
                    <Slider Grid.Row="2" Grid.Column="1" Minimum="0.5" Maximum="2" Value="{Binding Path=TrimEnd}"/>
                    <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding Path=TrimEnd, StringFormat=F2}"/>
                </Grid>
            </GroupBox>

            <StackPanel Grid.Column="1" Orientation="Horizontal"
                        HorizontalAlignment="Center" VerticalAlignment="Center">
                <Button Command="{Binding Path=PreviewCommand}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsPreviewing}" Value="True">
                                    <Setter Property="Content" Value="Stop"/>
                                </DataTrigger>
                            </Style.Triggers>

                            <Setter Property="Content" Value="Pre_view"/>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Save to _File" Command="{Binding Path=SaveCommand}"/>
            </StackPanel>
        </Grid>
    </Grid>
</metro:MetroWindow>